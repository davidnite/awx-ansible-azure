---
- name: Register server
  hosts: localhost
  connection: local
  tasks:
    - name: Getting Public IP
      azure_rm_publicipaddress_facts:
        resource_group: "{{ resource_group }}"
        name: '{{ vm_public_ip_name }}'
      register: pip_output

    - name: Adding public IP to hosts
      add_host:
        hostname: "{{ pip_output.ansible_facts.azure_publicipaddresses[0].properties.ipAddress }}"
        ansible_user: "{{ admin_username }}"
        groups: awx

- name: Configure AWX
  hosts: awx
  gather_facts: no
  become: true
  tasks:
    - name: Setup Tower-CLI for initial login
      shell: |
        tower-cli config host http://localhost
        tower-cli config verify_ssl false
        tower-cli login admin --password password

    - name: Change AWX default password
      shell: tower-cli user modify --username=admin --password={{ awx_password }}

    - name: Create the Azure Credential
      shell: tower-cli credential create --credential-type="Microsoft Azure Resource Manager" --organization=Default --name="Azure" --inputs='{"subscription":"{{ subscription_id }}", "client":"{{ client_id }}", "secret":"{{ client_secret }}", "tenant":"{{ tenant_id }}"}' --fail-on-found
    
    - name: Create the SCM Credential
      shell: tower-cli credential create --credential-type="Source Control" --organization=Default --name=SCM --inputs='{"username":"{{ scm_user }}", "password":"{{ scm_pass }}"}' --fail-on-found


    - name: Create a domain WinRM Credential
      shell: tower-cli credential create --credential-type="Machine" --organization=Default --name=WinRM --inputs='{"username":"{{ domain_admin }}@{{ domain_name | upper }}", "password":"{{ domain_password }}"}' --fail-on-found

    - name: Create an Azure Inventory  
      shell: |
        tower-cli inventory create --name="Azure" --organization=Default --fail-on-found
        tower-cli inventory_source create --source=azure_rm --name="Azure" --inventory="Azure" --credential="Azure" --fail-on-found
        tower-cli schedule create --inventory-source="Azure" --name="AzureSchedule" --rrule "DTSTART:20181018T000000Z RRULE:FREQ=HOURLY;INTERVAL=1" --fail-on-found